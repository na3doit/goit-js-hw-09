{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAM,GAE1BA,EAAA,GAEP,CAnDeQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBAaJ,IAAIZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWC,OAAOC,YAAY,IAAIC,SAASC,MAAMC,SACpEnB,EAAQoB,OAAOpB,GACfa,EAAOO,OAAOP,GAId,IAAK,IAAIQ,EAAI,EAAGA,EAAIP,EAAQO,GAAK,EAC/BvB,EAAcuB,EAAGrB,GACdsB,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAuB1B,QAAeC,MAAS,IAGlD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAsB5B,QAAeC,MAAS,IAGpDA,GAASa,CAEb","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  // //1 Варіантю\n  // let delay = event.currentTarget.delay.value;\n  // let step = event.currentTarget.step.value;\n  // let amount = event.currentTarget.amount.value;\n  //===============\n  //2 Варіант\n  // let { delay, step, amount } = Event.target;\n  // let delayValue = delay.value;\n  // let stepValue = step.value;\n  // let amountValue = amount.value;\n  //=====\n  //3 Варіант\n  let { delay, step, amount } = Object.fromEntries(new FormData(event.target));\n  delay = Number(delay);\n  step = Number(step);\n  //4 Варіант\n  // let array = Object.values(Object.fromEntries(new FormData(event.target)));\n  // console.log(array);\n  for (let i = 1; i < amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","step","amount","Object","fromEntries","FormData","event","target","Number","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.17d41965.js.map"}